#derive[match]
record Data.Pair (a: Type) (b: Type) {
    fst : a
    snd : b
}

A (n: Data.Pair Data.U60 Data.U60) : Data.U60
A n =
    match Data.Pair n {
        new => ?
    }


B (n: Data.Pair Data.U60 Data.U60) : Data.U60
B n =
    open Data.Pair n
    ?

C (n: Data.Pair Data.U60 Data.U60) : Data.U60
C n =
    let Data.Pair.new fst snd = n
    ?


